# it is important to use this apiVersion
apiVersion: witboost.com/v2
kind: EditTemplate
metadata:
  name: edit-google-bigquery-outputport-template.1
  title: Google BigQuery Output Port Edit Template
  description: Edit an Output Port on Google BigQuery
  tags:
    - edit
    - output-port
    - google
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:google-bigquery-outputport-template:0.0.0
  parameters:
    - title: Update Output Port
      description: |
        This wizard will allow you to edit the metadata for a previously created Output Port.
        
        Most metadata is editable but some (like the name, domain, system etc) are not; their fields will be read-only.
        
        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      description: Update basic information for this component
      required:
        - description
      properties:
        name:
          title: Name
          type: string
          description: Not editable. The name of the component.
          ui:disabled: true
        fullyQualifiedName:
          title: Fully Qualified Name
          type: string
          description: Component fully qualified name
        description:
          title: Description
          type: string
          description: Required. Help others understand what this component is for. What data will it expose?
        domain:
          title: Domain
          type: string
          description: Not editable. Domain of the System this component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
          ui:disabled: true
        parentRef:
          title: Parent
          type: string
          description: Not editable. Parent system this component belongs to.
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: Not editable. Autogenerated from the information above. A unique identifier for the component.
          ui:disabled: true
        owner:
          title: Owner
          type: string
          description: System owner
          ui:field: EntitySelectionPicker
          ui:fieldName: parentRef
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: A component could depend on other components in the same System. This information will be used to deploy the components in such an order that their dependencies already exist.
          default: [ ]
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: parentRef
            relation: hasPart
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string

    - title: Update Terms & Conditions and SLA
      description: Update Terms & Conditions and Service Level Agreement information for this System.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%

    - title: Update Data Sharing Agreement
      description: Update the Data Sharing Agreement clauses for this System.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream sue cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.

    - title: Data contract schema
      description: |-
        Define the schema of the Output Port view. Primitive data types supported.
        
        The **Data Contract** schema specifies the structure of the data that will be exposed through the Output Port.  
        
        This schema will be used by the Output Port to create a Google BigQuery view with the exact columns defined in this schema.
        **If the schema is not provided, the source table schema will be used to create the view**

        The Data Contract ensures consistency and enforces a predefined structure.

        You can modify the Data Contract later in the **Edit** section.
      properties:
        schemaDefinition:
          type: object
          ui:options:
            displayTitle: false
          properties:
            schemaColumns:
              title: Column Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - name
                  - dataType
                properties:
                  name:
                    type: string
                    title: Name
                  description:
                    type: string
                    title: Description
                  dataType:
                    type: string
                    default: STRING
                    title: Data Type
                    enum:
                      - STRING
                      - INTEGER
                      - FLOAT
                      - NUMERIC
                      - BIGNUMERIC
                      - BOOLEAN
                      - TIMESTAMP
                      - DATE
                      - TIME
                      - DATETIME
                      - JSON
                      - GEOGRAPHY
                      - BYTES
                  constraint:
                    type: string
                    title: Mode
                    default: NULLABLE
                    enum:
                      - NULLABLE
                      - REQUIRED
                      - REPEATED
                allOf:
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: STRING
                            - const: BYTES
                    then:
                      properties:
                        dataLength:
                          title: Column Length
                          type: integer
                          description: Maximum length of column row
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: NUMERIC
                            - const: BIGNUMERIC
                    then:
                      properties:
                        precision:
                          title: Precision
                          type: integer
                          description: Precision of the numeric data type
                          minimum: 1
                          maximum: 38
                          default: 38
                        scale:
                          title: Scale
                          type: integer
                          description: Scale of the numeric data type; cannot be greater than precision minus 1
                          minimum: 0
                          maximum: 38
                          default: 0
                        roundingMode:
                          title: Rounding mode
                          type: string
                          default: ROUNDING_MODE_UNSPECIFIED
                          enum:
                            - ROUNDING_MODE_UNSPECIFIED
                            - ROUND_HALF_AWAY_FROM_ZERO
                            - ROUND_HALF_EVEN

    - title: Provide BigQuery view information
      description: |-
        Fill out the information about the target project and dataset where the view Output Port will be created,
        as well as the source table name. If no value is provided for the **dataset** field, an automatic value will
        be generated based on the domain, system name, major version, and deployment environment.
        
        **Warning:** If you modify the View name, be sure that the original view is not deployed, as otherwise there will be
        no way to undeploy the original from Witboost if you change it.

      required:
        - project
        - tableName
        - viewName
      properties:
        project:
          title: Project ID
          type: string
          description: Google BigQuery project ID where the dataset is stored
        dataset:
          title: Dataset name
          type: string
          description: Cannot be edited. Dataset name where the source table is stored and the view table will be created. If not provided
            it will be autogenerated
          ui:disabled: true
        tableName:
          title: Table name
          type: string
          description: Source table name located on the provided dataset
        viewName:
          title: View name
          type: string
          description: Name of the view to be created and exposed as Output Port

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: '.'
        values:
          description: '${{ parameters.description }}'
          dependsOn: '${{ parameters.dependsOn }}'
          tags: '${{ values.tags }}'
          processDescription: '${{ parameters.processDescription }}'
          intervalOfChange: '${{ parameters.intervalOfChange }}'
          timeliness: '${{ parameters.timeliness }}'
          upTime: '${{ parameters.upTime }}'
          termsAndConditions: '${{ parameters.termsAndConditions }}'
          endpoint: '${{ parameters.endpoint }}'
          schemaColumns: '${{ parameters.schemaDefinition.schemaColumns }}'
          purpose: '${{ parameters.purpose }}'
          billing: '${{ parameters.billing }}'
          security: '${{ parameters.security }}'
          intendedUsage: '${{ parameters.intendedUsage }}'
          limitations: '${{ parameters.limitations }}'
          lifeCycle: '${{ parameters.lifeCycle }}'
          confidentiality: '${{ parameters.confidentiality }}'
          project: '${{ parameters.project }}'
          dataset: '${{ parameters.dataset }}'
          tableName: '${{ parameters.tableName }}'
          viewName: '${{ parameters.viewName }}'
